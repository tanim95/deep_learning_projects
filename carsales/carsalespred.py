# -*- coding: utf-8 -*-
"""carsalespred.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XfQ1EGxYGlWqIRiZo1vyn5IpZUCAbJIF
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/Car_Purchasing_Data.csv',encoding='ISO-8859-1')
df.head(10)

sns.pairplot(df)

X = df.iloc[:,3:]
X = X.iloc[:,: -1]
X.head()

y = df['Car Purchase Amount']
y = y.values.reshape(-1,1)

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
X_scaled = scaler.fit_transform(X)
y_scaled = scaler.fit_transform(y)

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X_scaled,y_scaled,test_size= 0.25,random_state = 42)

import tensorflow.keras
from keras.layers import Dense
from keras.models import Sequential
model = Sequential()
model.add(Dense(25,input_dim = 5,activation = 'relu'))
model.add(Dense(25,activation = 'relu'))
model.add(Dense(1,activation = 'linear'))
model.summary()

model.compile(optimizer= 'adam',loss = 'mean_squared_error')
trainedModel  = model.fit(X_train,y_train,epochs= 20,batch_size= 15,verbose= 1,validation_split= 0.2)

trainedModel.history.keys()

plt.plot(trainedModel.history['loss'])
plt.plot(trainedModel.history['val_loss'])
plt.legend(['training loss','validation loss'])
plt.xlabel('epoch number')

# GENDER,AGE,SALARY,C.C DEBT,NET WORTH
X_test = np.array([[1,40,60000,10000,800000]])
y_predict = model.predict(X_test)

y_predict
336332.9